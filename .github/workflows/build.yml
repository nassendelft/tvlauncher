name: Build APK

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') == true}}
        run: |
          PUBLISH_VERSION="${GITHUB_REF_NAME:1}"
          echo "publish_version=$PUBLISH_VERSION" >> $GITHUB_ENV
          echo "version: $PUBLISH_VERSION"

      - name: Use timestamp as version
        if: ${{ startsWith(github.ref, 'refs/tags/v') == false}}
        run: |
          PUBLISH_VERSION="$(date +'%Y%m%d%H%M%S')"
          echo "publish_version=$PUBLISH_VERSION" >> $GITHUB_ENV
          echo "version: $PUBLISH_VERSION"

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build APK
        run: ./gradlew assembleDebug --stacktrace -PpublishVersion=${{ env.publish_version }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release APK
    needs: apk
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        run: |
          PUBLISH_VERSION="${GITHUB_REF_NAME:1}"
          echo "publish_version=$PUBLISH_VERSION" >> $GITHUB_ENV
          echo "version: $PUBLISH_VERSION"

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: launcher-v${{ env.publish_version }}.apk
          asset_content_type: application/zip

  post_release:
    name: Post-release actions
    needs: release
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          ref: 'refs/heads/main'

      - name: Increment version code
        run: |
          OLD_VERSION="$(grep 'versionCode' app/build.gradle | awk -F ' ' '{print $2}')"
          NEW_VERSION="$(($OLD_VERSION+1))"
          sed -i 's/versionCode '$OLD_VERSION'/versionCode '$NEW_VERSION'/' app/build.gradle

      - name: Push changes
        run: |
          git config --global user.name 'Nick'
          git config --global user.email 'nassendelft@users.noreply.github.com'
          git commit -am "[Automated] increased version code"
          git push